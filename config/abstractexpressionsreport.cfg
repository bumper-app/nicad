# NiCad3 example abstraction clone configuration parameters
# J.R. Cordy, Queen's University, May 2010 (revised Jan 2012)
#
# Example of using NiCad3 nonterminal abstraction:
# Treat all expressions as equivalent in clone comparison
#

# Maximum difference threshold we are interested in (0.n)
# For exact clones, no near-miss differences allowed (0.0)

threshold=0.1

# Sizes of clones we are interested in, in pretty-printed lines
# Change if you prefer 

minsize=10
maxsize=2500

# Custom pre-transformation to be applied to potential clones (none, transformname)
# Where "transformname" is the name of a pre-transformation TXL program txl/transformname.txl in the txl/
# subdirectory to be applied to all potential clones
# None for this example

transform=none

# Kind of renaming to be applied (none, blind, consistent)
# Consistent renaming consistently renames identifiers to "Xn", where n is a number
# In this example, no renaming

rename=none

# Kind of filtering to be applied (none, nonterminal ...)
# Where each "nonterminal" is the name of a nonterminal in the language grammar
# In this example, no filtering

filter=none

# Kind of abstraction to be applied (none, nonterminal ...)
# Where each "nonterminal" is the name of a nonterminal in the language grammar
# In this example, we abstract all expressions to be equivalent 

abstract=expression

# Custom contextual normalizer to be applied to potential clones (none, normname)
# Where "normname" is the name of a normalizing TXL program txl/normname.txl in the txl/
# subdirectory to be applied to all potential clones
# None for this example

normalize=none

# Cluster clone pairs into classes
# Change to yes if desired

cluster=no

# Make XML and HTML source reports
# Change to yes if desired

report=report

# End of NiCad configuration parameters
